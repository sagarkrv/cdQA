from cdqa.utils.download import download_squad, download_model, download_bnpp_data
exit()
from cdqa.utils.download import download_squad, download_model, download_bnpp_data
exit()
from cdqa.utils.download import download_squad, download_model, download_bnpp_data
import wget
exit()
import wget
from cdqa.utils.download import download_squad, download_model, download_bnpp_data
import os
os.getcwd()
directory = "./models"
download_squad(dir = "./data")
download_model('bert-squad_2.0', dir = "./models")
exit()
from cdqa.utils.download import download_squad, download_model, download_bnpp_data
download_squad(dir='./data')
download_bnpp_data(dir='./data')
download_model('bert-squad_1.1', dir='./models')
download_model('distilbert-squad_1.1', dir='./'models')
download_model('distilbert-squad_1.1', dir='./models')
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
exit()
from tika import parser
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
df = pd.read_csv('./data/bnpp_newsroom-v1.1.csv', converters={'paragraphs': literal_eval})
cdqa_pipeline = QAPipeline(reader='./models/bert-squad_2.0')
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
df = pd.read_csv('./data/bnpp_newsroom-v1.1.csv', converters={'paragraphs': literal_eval})
-3-vm:~/cdqa$ cd ../
meghapragnesh23@tensorflow-3-vm:~$ pwd
/home/meghapragnesh23
meghapragnesh23@tensorflow-3-vm:~$ python
Python 3.7.4 (default, Aug 13 2019, 20:35:49) 
[GCC 7.3.0] :: Anaconda, Inc. on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import pandas as pd
cdqa_pipeline = QAPipeline(reader='./models/bert-squad_2.0')
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
df = pd.read_csv('./data/bnpp_newsroom-v1.1.csv', converters={'paragraphs': literal_eval})
cdqa_pipeline = QAPipeline(reader='bert_qa.joblib')
cdqa_pipeline = QAPipeline(reader='./models/bert_qa.joblib')
cdqa_pipeline.fit_retriever(df=df)
cdqa_pipeline.predict(X='When BNP Paribas was created?')
cdqa_pipeline.predict('When BNP Paribas was created?')
exit()
from cdqa.retriever import *
exit()
import math
import numpy as np
from nltk.stem import SnowballStemmer
exit()
from cdqa.utils.download import download_squad, download_model, download_bnpp_data
directory = "./data"
download_squad(dir=directory)
download_bnpp_data(dir=directory)
# Downloading pre-trained BERT fine-tuned on SQuAD 1.1
download_model('bert-squad_1.1', dir=directory)
os.listdir("./models")
import os
os.listdir("./models")
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
from cdqa.retriever import TfidfRetriever, BM25Retriever
from cdqa.retriever import TfidfRetriever, BM25Retriever, BM25Okapi
exit()
import pandas as pd
from ast import literal_eval
from cdqa.pipeline import QAPipeline
exit()
from cdqa.pipeline import QAPipeline
exit()
from cdqa.pipeline import QAPipeline
from cdqa.pipeline import QAPipeline/__init__.py
from cdqa.pipeline import "QAPipeline/__init__.py"
import "QAPipeline/__init__.py"
from cdqa.pipeline import QAPipeline/__init__.py
import cdqa.pipeline/__init__.py
from cdqa.pipeline import 
from cdqa.pipeline import *
from cdqa.retriever import *
exit()
import cdqa.retriever.BM25Retriever
import cdqa.retriever.retriever_sklearn
print( cdqa.retriever.retriever_sklearn.BM25Retriever)
import cdqa.retriever.retriever_sklearn.BM25Retriever
print( cdqa.retriever.retriever_sklearn.BM25Retriever)
print( cdqa.retriever.retriever_sklearn.BM25Okapi)
from import cdqa.retriever.retriever_sklearn import *
from cdqa.retriever.retriever_sklearn import *
BM25Retriever()
BM25Okapi()
exit()
from cdqa.pipeline import QAPipeline
exit()
